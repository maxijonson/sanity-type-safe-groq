// Generated by ts-to-zod
import { q as z } from "groqd";

export const sanityImagePaletteSwatchSchema = z.object({
  _type: z.literal("sanity.imagePaletteSwatch"),
  background: z.string().optional(),
  foreground: z.string().optional(),
  population: z.number().optional(),
  title: z.string().optional(),
});

export const sanityImagePaletteSchema = z.object({
  _type: z.literal("sanity.imagePalette"),
  darkMuted: sanityImagePaletteSwatchSchema.optional(),
  lightVibrant: sanityImagePaletteSwatchSchema.optional(),
  darkVibrant: sanityImagePaletteSwatchSchema.optional(),
  vibrant: sanityImagePaletteSwatchSchema.optional(),
  dominant: sanityImagePaletteSwatchSchema.optional(),
  lightMuted: sanityImagePaletteSwatchSchema.optional(),
  muted: sanityImagePaletteSwatchSchema.optional(),
});

export const sanityImageDimensionsSchema = z.object({
  _type: z.literal("sanity.imageDimensions"),
  height: z.number().optional(),
  width: z.number().optional(),
  aspectRatio: z.number().optional(),
});

export const sanityImageHotspotSchema = z.object({
  _type: z.literal("sanity.imageHotspot"),
  x: z.number().optional(),
  y: z.number().optional(),
  height: z.number().optional(),
  width: z.number().optional(),
});

export const sanityImageCropSchema = z.object({
  _type: z.literal("sanity.imageCrop"),
  top: z.number().optional(),
  bottom: z.number().optional(),
  left: z.number().optional(),
  right: z.number().optional(),
});

export const sanityAssetSourceDataSchema = z.object({
  _type: z.literal("sanity.assetSourceData"),
  name: z.string().optional(),
  id: z.string().optional(),
  url: z.string().optional(),
});

export const geopointSchema = z.object({
  _type: z.literal("geopoint"),
  lat: z.number().optional(),
  lng: z.number().optional(),
  alt: z.number().optional(),
});

export const slugSchema = z.object({
  _type: z.literal("slug"),
  current: z.string(),
  source: z.string().optional(),
});

export const categorySchema = z.object({
  _id: z.string(),
  _type: z.literal("category"),
  _createdAt: z.string(),
  _updatedAt: z.string(),
  _rev: z.string(),
  title: z.string(),
  slug: slugSchema,
});

export const sanityFileAssetSchema = z.object({
  _id: z.string(),
  _type: z.literal("sanity.fileAsset"),
  _createdAt: z.string(),
  _updatedAt: z.string(),
  _rev: z.string(),
  originalFilename: z.string().optional(),
  label: z.string().optional(),
  title: z.string().optional(),
  description: z.string().optional(),
  altText: z.string().optional(),
  sha1hash: z.string().optional(),
  extension: z.string().optional(),
  mimeType: z.string().optional(),
  size: z.number().optional(),
  assetId: z.string().optional(),
  uploadId: z.string().optional(),
  path: z.string().optional(),
  url: z.string().optional(),
  source: sanityAssetSourceDataSchema.optional(),
});

export const sanityImageMetadataSchema = z.object({
  _type: z.literal("sanity.imageMetadata"),
  location: geopointSchema.optional(),
  dimensions: sanityImageDimensionsSchema.optional(),
  palette: sanityImagePaletteSchema.optional(),
  lqip: z.string().optional(),
  blurHash: z.string().optional(),
  hasAlpha: z.boolean().optional(),
  isOpaque: z.boolean().optional(),
});

export const postSchema = z.object({
  _id: z.string(),
  _type: z.literal("post"),
  _createdAt: z.string(),
  _updatedAt: z.string(),
  _rev: z.string(),
  title: z.string(),
  slug: slugSchema,
  categories: z.array(
    z.object({
      _ref: z.string(),
      _type: z.literal("reference"),
      _weak: z.boolean().optional(),
      _key: z.string(),
    }),
  ),
  keywords: z.array(z.string()).optional(),
  body: z.array(
    z.union([
      z.object({
        children: z
          .array(
            z.object({
              marks: z.array(z.string()).optional(),
              text: z.string().optional(),
              _type: z.literal("span"),
              _key: z.string(),
            }),
          )
          .optional(),
        style: z
          .union([
            z.literal("normal"),
            z.literal("title"),
            z.literal("h1"),
            z.literal("h2"),
            z.literal("h3"),
            z.literal("blockquote"),
          ])
          .optional(),
        listItem: z
          .union([z.literal("bullet"), z.literal("number")])
          .optional(),
        markDefs: z
          .array(
            z.object({
              reference: z
                .object({
                  _ref: z.string(),
                  _type: z.literal("reference"),
                  _weak: z.boolean().optional(),
                })
                .optional(),
              _type: z.literal("internalLink"),
              _key: z.string(),
            }),
          )
          .optional(),
        level: z.number().optional(),
        _type: z.literal("block"),
        _key: z.string(),
      }),
      z.object({
        type: z
          .union([z.literal("info"), z.literal("warning"), z.literal("danger")])
          .optional(),
        message: z.string().optional(),
        _type: z.literal("alert"),
        _key: z.string(),
      }),
    ]),
  ),
});

export const sanityImageAssetSchema = z.object({
  _id: z.string(),
  _type: z.literal("sanity.imageAsset"),
  _createdAt: z.string(),
  _updatedAt: z.string(),
  _rev: z.string(),
  originalFilename: z.string().optional(),
  label: z.string().optional(),
  title: z.string().optional(),
  description: z.string().optional(),
  altText: z.string().optional(),
  sha1hash: z.string().optional(),
  extension: z.string().optional(),
  mimeType: z.string().optional(),
  size: z.number().optional(),
  assetId: z.string().optional(),
  uploadId: z.string().optional(),
  path: z.string().optional(),
  url: z.string().optional(),
  metadata: sanityImageMetadataSchema.optional(),
  source: sanityAssetSourceDataSchema.optional(),
});

export const allSanitySchemaTypesSchema = z.union([
  sanityImagePaletteSwatchSchema,
  sanityImagePaletteSchema,
  sanityImageDimensionsSchema,
  sanityImageHotspotSchema,
  sanityImageCropSchema,
  sanityFileAssetSchema,
  sanityImageAssetSchema,
  sanityImageMetadataSchema,
  geopointSchema,
  sanityAssetSourceDataSchema,
  postSchema,
  categorySchema,
  slugSchema,
]);
